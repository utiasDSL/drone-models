[project]
name = "drone_models"
version = "0.0.1"
description = "Models of quadrotor drones for estimation and control tasks."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
]

dependencies = [
    "numpy>=2.0.0",
    "casadi>=3.7.0",
    "array-api-compat",
    # "scipy @ git+https://github.com/scipy/scipy.git@4cb83b6",               # TODO: Replace with scipy 1.17 once released
    "array-api-typing @ git+https://github.com/data-apis/array-api-typing", # TODO: Replace with array-api-typing from pip once released
    "array-api-extra",
    "pip",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["drone_models*"]

[tool.setuptools.package-data]
drone_models = [
    "data/assets/cf2x/cf2x_pcb.stl",
    "data/**/*.*",                   # 3D model and parameter information
    "**/*.toml",                     # model specific parameter information
]

[tool.pytest.ini_options]
markers = ["unit", "integration", "render"]
addopts = "-m 'not render'"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
    "docs/conf.py",
]

line-length = 100
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "D", "TCH", "ANN", "T20"]
ignore = ["ANN401"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"benchmark/*" = ["D100", "D103"]
"tests/*" = ["D100", "D103", "D104"]
"examples/*" = ["D100", "D103"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true
suppress-none-returning = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
drone_models = { path = ".", editable = true }

# [tool.pixi.feature.tests]
# system-requirements = { cuda = "12"}

[tool.pixi.feature.tests.dependencies]
pytest = ">=8.4.1"
pytest-timeout = ">=2.1.0"
pytest-cov = ">=6.0.0"
array-api-strict = ">=2.4.1"

# Adding jax as feature dependency is in conflict with the scipy dependency in the main project
# because we are installing a preview version. Reaffirming the dependency on scipy makes jax and the
# dev version work together. However, building scipy from git is only possible as a pypi dependency,
# hence we need to move both jax and scipy to here.
# TODO: Remove this once scipy 1.17 has been added with broadcasting.
[tool.pixi.feature.tests.pypi-dependencies]
scipy = { git = "https://github.com/scipy/scipy.git", rev = "4cb83b6" }
jax = ">=0.7.0"

[tool.pixi.feature.tests.tasks]
tests = { cmd = "pytest -v tests", description = "Run tests" }

[tool.pixi.feature.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"

[tool.pixi.feature.docs.pypi-dependencies]
mkdocstrings = { version = "*", extras = ["python"] }
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"
mkdocs-section-index = "*"

[tool.pixi.feature.docs.tasks]
docs-serve = { cmd = "mkdocs serve", description = "Serve docs locally" }
docs-build = { cmd = "mkdocs build", description = "Build docs" }

[tool.pixi.environments]
default = { solve-group = "default" }
tests = { features = ["tests"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }

[tool.pixi.dependencies]
gcc = ">=15.1.0,<15.2"
cxx-compiler = ">=1.0.0,<2"
gfortran = ">=15.1.0,<15.2"
openblas = ">=0.3.30,<0.4"
ruff = "*"
